#include <QCompleter>
#include <QStyledItemDelegate>
#include <QEvent>
#include <QMouseEvent>

class CustomCompleterDelegate : public QStyledItemDelegate
{
public:
    using QStyledItemDelegate::QStyledItemDelegate;

    bool editorEvent(QEvent *event, QAbstractItemModel *model, const QStyleOptionViewItem &option, const QModelIndex &index) override
    {
        if (event->type() == QEvent::MouseMove)
        {
            QMouseEvent *mouseEvent = static_cast<QMouseEvent*>(event);
            if (option.rect.contains(mouseEvent->pos()))
            {
                // Здесь вы можете выполнять действия при наведении мыши на элемент
                // Например, получить индекс элемента index и выполнить нужные вам действия
                // ...
            }
        }

        return QStyledItemDelegate::editorEvent(event, model, option, index);
    }
};

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);

    QCompleter completer(/* ваша модель данных */, /* ваш родительский виджет */);
    CustomCompleterDelegate completerDelegate(&completer);
    completer.setPopupDelegate(&completerDelegate);

    // ...
}
