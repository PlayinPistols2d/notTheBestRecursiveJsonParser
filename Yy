#include <iostream>
#include <string>
#include <cmath>

int main() {
    std::string expression = "1+cos(2)*3 + 1.2e+10 - 23/( sqrt(9)-2)";
    std::string result;
    size_t pos = 0;
    
    while (pos < expression.length()) {
        if (expression[pos] == 'e' || expression[pos] == 'E') {
            // Find the start position of the exponential part
            size_t start = pos - 1;
            while (start > 0 && std::isdigit(expression[start])) {
                start--;
            }
            start++;
            
            // Find the end position of the exponential part
            size_t end = pos + 1;
            while (end < expression.length() && (std::isdigit(expression[end]) || expression[end] == '+' || expression[end] == '-')) {
                end++;
            }
            
            // Extract the exponential part and convert it to a normal number
            std::string exponential = expression.substr(start, end - start);
            double number = std::stod(exponential);
            
            // Replace the exponential part with the normal number in the expression
            result += std::to_string(number);
            
            // Move the position to the end of the exponential part
            pos = end - 1;
        }
        else {
            result += expression[pos];
        }
        
        pos++;
    }
    
    std::cout << "Original expression: " << expression << std::endl;
    std::cout << "Transformed expression: " << result << std::endl;

    return 0;
}
