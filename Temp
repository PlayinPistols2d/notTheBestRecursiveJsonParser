// mainwindow.h
#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QGraphicsScene>
#include <QGraphicsView>
#include <QPointF>
#include <QMap>
#include <QVector>

class QGraphicsItem;

namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = 0);
    ~MainWindow();

private slots:
    void on_addRectButton_clicked();
    void on_addEllipseButton_clicked();
    void on_addArrowButton_clicked();

private:
    Ui::MainWindow *ui;
    QGraphicsScene *scene;
    QMap<int, QGraphicsItem*> items;
    QVector<QPair<int, int>> edges;

    int getUniqueId();
};

#endif // MAINWINDOW_H



// mainwindow.cpp
#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QGraphicsRectItem>
#include <QGraphicsEllipseItem>
#include <QGraphicsLineItem>
#include <QMessageBox>

int uniqueId = 0;

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow),
    scene(new QGraphicsScene(this))
{
    ui->setupUi(this);
    ui->graphicsView->setScene(scene);
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::on_addRectButton_clicked()
{
    QGraphicsRectItem *rect = new QGraphicsRectItem(0, 0, 100, 100);
    rect->setPos(QPointF(50, 50));
    rect->setFlags(QGraphicsItem::ItemIsSelectable | QGraphicsItem::ItemIsMovable);
    int id = getUniqueId();
    items[id] = rect;
    scene->addItem(rect);
}

void MainWindow::on_addEllipseButton_clicked()
{
    QGraphicsEllipseItem *ellipse = new QGraphicsEllipseItem(0, 0, 100, 100);
    ellipse->setPos(QPointF(50, 50));
    ellipse->setFlags(QGraphicsItem::ItemIsSelectable | QGraphicsItem::ItemIsMovable);
    int id = getUniqueId();
    items[id] = ellipse;
    scene->addItem(ellipse);
}

void MainWindow::on_addArrowButton_clicked()
{
    QList<QGraphicsItem*> selected = scene->selectedItems();
    if (selected.count() != 2) {
        QMessageBox::information(this, "Error", "Please select two items to create an arrow.");
        return;
    }
    QGraphicsLineItem *line = new QGraphicsLineItem();
    line->setPen(QPen(Qt::black, 2));
    line->setPos(selected[0]->pos());
    line->setLine(QLineF(selected[0]->pos(), selected[1]->pos()));
    int from = items.key(selected[0]);
    int to = items.key(selected[1]);
    edges.append(qMakePair(from, to));
    scene->addItem(line);
}

int MainWindow::getUniqueId()
{
    return ++uniqueId;
}


